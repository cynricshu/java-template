buildscript {
    ext {
        kotlinVersion = "1.3.11"
        springBootVersion = "2.1.1.RELEASE"
    }

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
        classpath("com.palantir:jacoco-coverage:0.4.0")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
        // for jdbc only
        classpath("mysql:mysql-connector-java:5.1.46")
    }
}

apply plugin: "com.palantir.jacoco-full-report"
apply plugin: "org.sonarqube"

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply from: rootProject.file('gradle/checkcode.gradle')
    apply plugin: 'jacoco'

    group 'com.cynricshu'

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
        annotationProcessor("org.projectlombok:lombok")
        implementation("org.projectlombok:lombok")
        implementation("org.hibernate:hibernate-validator")
        implementation("com.google.guava:guava")
        implementation("commons-io:commons-io")

        testAnnotationProcessor('org.projectlombok:lombok')
        testImplementation("junit:junit")
        testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
        testImplementation("org.springframework.boot:spring-boot-starter-test")
        testImplementation("org.projectlombok:lombok")
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = 11
        targetCompatibility = 11
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    dependencyManagement {
        dependencies {
            dependency("org.projectlombok:lombok:1.18.8")
            dependency("com.google.guava:guava:25.0-jre")
            dependency("org.apache.commons:commons-collections4:4.1")
            dependency("commons-io:commons-io:2.6")
            dependency("org.hibernate:hibernate-validator:6.0.13.Final")
            dependency("javax.annotation:javax.annotation-api:1.3.2")
            dependency("org.slf4j:slf4j-api:1.7.25")

//            dependency("org.springframework.boot:spring-boot:$springBootVersion")
            dependency("org.springframework.boot:spring-boot-starter-web:$springBootVersion")
            dependency("org.springframework.boot:spring-boot-starter-websocket:$springBootVersion")
            dependency("org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion")
            dependency("org.springframework.boot:spring-boot-starter-test:$springBootVersion")
            dependency("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")
            dependency("net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1")

            dependency("org.mybatis:mybatis:3.4.6")
            dependency("org.mybatis.scripting:mybatis-velocity:1.2")
            dependency("mysql:mysql-connector-java:5.1.46")

            dependency("io.springfox:springfox-swagger2:2.8.0")
            dependency("io.springfox:springfox-swagger-ui:2.8.0")

            dependency("joda-time:joda-time:2.10.1")
            dependency("io.kubernetes:client-java:2.0.0")
            dependency("io.micrometer:micrometer-registry-prometheus:1.1.5")

            dependency("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7")
            dependency("com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.7")
//            dependency("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.7")
//            dependency("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.7")
            dependency("com.fasterxml.jackson.core:jackson-databind:2.9.7")
            dependency("com.fasterxml.jackson.core:jackson-annotations:2.9.7")

            dependency("com.squareup.okhttp3:okhttp:3.12.0")
            dependency("com.squareup.retrofit2:retrofit:2.5.0")
            dependency("com.squareup.retrofit2:converter-scalars:2.5.0")
            dependency("com.squareup.retrofit2:converter-jackson:2.5.0")

            dependency("com.baidu.acu.pie:audio-streaming-client-java:1.0.0-SNAPSHOT")

            dependency("org.elasticsearch:elasticsearch:7.2.0")
            dependency("org.elasticsearch.client:elasticsearch-rest-client:7.2.0")
            dependency("org.elasticsearch.client:elasticsearch-rest-high-level-client:7.2.0")
        }
    }

    jacoco {
        toolVersion = "0.8.2"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            csv.enabled = false
        }

        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it, exclude: [
                        "**/config/**",
                        "**/exception/**",
                        "**/model/**",
                        "**/type/**",
                        "**/request/**",
                        "**/response/**",
                        "**/message/**",
                        "**/*Bean.class",
                        "**/*Constants.class",
                        "**/*Type.class",
                        "**/*Request.class",
                        "**/*Response.class",
                        "**/*Message.class",
                        "**/*Example.class",
                        "**/*Criteria.class"
                ])
            })
        }
    }
}